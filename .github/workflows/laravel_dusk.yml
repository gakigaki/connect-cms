name: Laravel Dusk

on:
  schedule:
    # 毎日AM1時実行
    cron: '0 16 * * *'
  # 手動実行
  workflow_dispatch:
    inputs:
      php_version:
        type: choice
        description: 'テストするPHPバージョン'
        required: true
        options:
        - '7.3'
        - '7.4'
        - '8.0'
        - '8.1'
        default: '7.3'

env:
  # schedule用
  PHP_VERSION_DEFAULT: '7.3'

jobs:

  dusk-php:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout (official)
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # スクリーンショットの日本語表示対応
      - name: Install Jp font
        run: sudo apt install fonts-noto

      - name: Prepare The Environment
        run: |
          cp .env.example .env
          sed -i -e "s|DB_PASSWORD=|DB_PASSWORD=root|g" .env
          sed -i -e "s|APP_URL=http://localhost|APP_URL=http://localhost:8000|g" .env
          sed -i -e "s|TRANSLATE_API_URL=""|TRANSLATE_API_URL="http://localhost:8000"|g" .env
          sed -i -e "s|PDF_THUMBNAIL_API_URL=""|PDF_THUMBNAIL_API_URL="http://localhost:8000"|g" .env
          sed -i -e "s|FACE_AI_API_URL=""|FACE_AI_API_URL="http://localhost:8000"|g" .env

      # schedule でphpバージョン指定
      - name: Set if input php_version is empty
        run: |
          if [[ -z "$PHP_VERSION" ]]; then
            echo "::set-output name=PHP_VERSION::$PHP_VERSION_DEFAULT"
          else
            echo "::set-output name=PHP_VERSION::$PHP_VERSION"
          fi
        env:
          PHP_VERSION: ${{ github.event.inputs.php_version }}
        id: php_version_empty_action

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP ${{ github.event.inputs.php_version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.php_version_empty_action.outputs.PHP_VERSION }}
          coverage: none
          ini-values: post_max_size=128M, upload_max_filesize=128M, date.timezone=Asia/Tokyo

      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE laravel character set UTF8mb4 collate utf8mb4_general_ci;"

      # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      # https://help.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # Laravel
      - name: Generate Application Key
        run: php artisan key:generate

      - name: DB migration
        run: php artisan migrate

      - name: Initial data import with seeder
        run: php artisan db:seed

      # dusk
      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run Laravel Server
        run: php artisan serve &

      - name: Run Dusk Tests
        run: php artisan dusk

      - name: Upload Screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console
